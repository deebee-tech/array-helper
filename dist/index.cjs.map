{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["/** Encapsulating class for all array-helpers.  All methods\n * below this are static so there does not need to be any\n * references to constructors.  This class is meant to be\n * used as a utility class for all helper methods dealing with\n * arrays and are mostly ports from LoDash and Underscore.\n * This class is not meant to be instantiated.\n */\nexport default class ArrayHelper {\n   /*** Return the unique values in an array based off of a key. */\n   public static uniqBy<T>(arr: T[], key?: string): T[] {\n      if (key === undefined || key === null || key === \"\") {\n         return arr.filter((value, index, arr) => arr.findIndex((x) => value === x) === index);\n      }\n\n      return arr.filter(\n         (value, index, arr) => arr.findIndex((x) => value[key as keyof T] === x[key as keyof T]) === index,\n      );\n   }\n\n   /*** Take in an array of keys and orders and re-order the entire array based on that input. */\n   public static orderBy<T>(arr: T[], keys: string[], directions: (\"asc\" | \"desc\")[]): T[] {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return arr.sort((a: any, b: any) => {\n         let i = 0;\n         let result = 0;\n         const length = keys.length;\n\n         while (result === 0 && i < length) {\n            const key = keys[i];\n            const direction = directions[i];\n\n            result =\n               direction === \"desc\"\n                  ? b[key as keyof T].toString().localeCompare(a[key as keyof T].toString())\n                  : a[key as keyof T].toString().localeCompare(b[key as keyof T].toString());\n            i++;\n         }\n\n         return result;\n      });\n   }\n}\n"],"names":["arr"],"mappings":";;AAOA,MAAqB,WAAA,CAAY;AAAA;AAAA,EAE9B,OAAc,MAAA,CAAU,GAAA,EAAU,GAAA,EAAmB;AAClD,IAAA,IAAI,GAAA,KAAQ,MAAA,IAAa,GAAA,KAAQ,IAAA,IAAQ,QAAQ,EAAA,EAAI;AAClD,MAAA,OAAO,GAAA,CAAI,MAAA,CAAO,CAAC,KAAA,EAAO,KAAA,EAAOA,IAAAA,KAAQA,IAAAA,CAAI,SAAA,CAAU,CAAC,CAAA,KAAM,KAAA,KAAU,CAAC,MAAM,KAAK,CAAA;AAAA,IACvF;AAEA,IAAA,OAAO,GAAA,CAAI,MAAA;AAAA,MACR,CAAC,KAAA,EAAO,KAAA,EAAOA,IAAAA,KAAQA,KAAI,SAAA,CAAU,CAAC,CAAA,KAAM,KAAA,CAAM,GAAc,CAAA,KAAM,CAAA,CAAE,GAAc,CAAC,CAAA,KAAM;AAAA,KAChG;AAAA,EACH;AAAA;AAAA,EAGA,OAAc,OAAA,CAAW,GAAA,EAAU,IAAA,EAAgB,UAAA,EAAqC;AAErF,IAAA,OAAO,GAAA,CAAI,IAAA,CAAK,CAAC,CAAA,EAAQ,CAAA,KAAW;AACjC,MAAA,IAAI,CAAA,GAAI,CAAA;AACR,MAAA,IAAI,MAAA,GAAS,CAAA;AACb,MAAA,MAAM,SAAS,IAAA,CAAK,MAAA;AAEpB,MAAA,OAAO,MAAA,KAAW,CAAA,IAAK,CAAA,GAAI,MAAA,EAAQ;AAChC,QAAA,MAAM,GAAA,GAAM,KAAK,CAAC,CAAA;AAClB,QAAA,MAAM,SAAA,GAAY,WAAW,CAAC,CAAA;AAE9B,QAAA,MAAA,GACG,SAAA,KAAc,MAAA,GACT,CAAA,CAAE,GAAc,CAAA,CAAE,UAAS,CAAE,aAAA,CAAc,CAAA,CAAE,GAAc,CAAA,CAAE,QAAA,EAAU,CAAA,GACvE,CAAA,CAAE,GAAc,CAAA,CAAE,QAAA,EAAS,CAAE,cAAc,CAAA,CAAE,GAAc,CAAA,CAAE,QAAA,EAAU,CAAA;AAC/E,QAAA,CAAA,EAAA;AAAA,MACH;AAEA,MAAA,OAAO,MAAA;AAAA,IACV,CAAC,CAAA;AAAA,EACJ;AACH;;;;"}